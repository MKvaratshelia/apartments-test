{"version":3,"sources":["store/types/types.js","store/reducer/reducer.js","store/reducer/index.js","store/actions/index.js","services/index.js","components/Card.js","App.js","index.js"],"names":["GET_CARDS","initialState","cards","store","createStore","state","action","type","payload","composeWithDevTools","applyMiddleware","thunk","getService","_apiBase","url","a","fetch","this","headers","res","ok","Error","status","json","getCards","dispatch","getResource","then","data","apartments","Card","card","title","description","image_url","useState","liked","setLiked","cls","className","src","alt","onClick","prev","join","App","useSelector","useDispatch","useEffect","map","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAaA,EAAY,YCEnBC,EAAe,CACnBC,MAAO,I,gBCEIC,EAAQC,uBDCE,WAAmC,IAAlCC,EAAiC,uDAAzBJ,EAAcK,EAAW,uCACvD,OAAQA,EAAOC,MACb,KAAKP,EACH,OAAO,2BAAKK,GAAZ,IAAmBH,MAAM,GAAD,mBAAMG,EAAMH,OAAZ,YAAsBI,EAAOE,YACvD,QACE,OAAOH,KCJXI,8BAAoBC,0BAAgBC,O,iDCHhCC,EAAa,ICJnB,iDACEC,SAAW,yBADb,sFAGE,WAAkBC,GAAlB,eAAAC,EAAA,sEACoBC,MAAM,GAAD,OAAIC,KAAKJ,UAAT,OAAoBC,GAAO,CAChDI,QAAS,CACP,eAAgB,sBAHtB,WACQC,EADR,QAMWC,GANX,sBAOU,IAAIC,MAAM,0BAAmBP,GAAnB,qBACAK,EAAIG,SARxB,uBAUeH,EAAII,OAVnB,wFAHF,+DDaaC,EAAW,WACtB,OAAO,SAACC,GACNb,EAAWc,YAAY,iCACpBC,MAAK,SAAAC,GAAI,OAAIH,GAVFvB,EAUoB0B,EAAKC,WATlC,CACLtB,KAAMP,EACNQ,QAASN,KAHI,IAACA,O,uBEJL4B,EAAO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,YAAaC,EAAcH,EAAdG,UAC5B,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAMF,EAAQ,CAAC,yCAA2C,CAAC,mBAMjE,OACE,sBAAKG,UAAU,wBAAf,UACE,qBAAKC,IAAKN,EAAWO,IAAKT,EAAOO,UAAU,gBAC3C,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BP,IAC7B,mBAAGO,UAAU,oBAAb,SAAkCN,OAEpC,wBAAQS,QAXY,WACtBL,GAAS,SAAAM,GAAI,OAAKA,MAUkBJ,UAAWD,EAAIM,KAAK,WCS7CC,MArBf,WACE,IAAM3C,EAAQ4C,aAAY,SAAA3C,GAAK,OAAIA,EAAMD,SACnCuB,EAAWsB,cAMjB,OAJAC,qBAAU,WACRvB,EAASD,OACR,CAACC,IAGF,qBAAKc,UAAU,MAAf,SACE,yBAASA,UAAU,OAAnB,SACE,qBAAKA,UAAU,8BAAf,SACGrC,EAAM+C,KAAI,SAAAlB,GACT,OAAO,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKmB,cCZnCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUlD,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJmD,SAASC,eAAe,W","file":"static/js/main.55acce8d.chunk.js","sourcesContent":["export const GET_CARDS = 'GET_CARDS'","import { GET_CARDS } from '../types/types'\r\n\r\nconst initialState = {\r\n  cards: [],\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CARDS:\r\n      return { ...state, cards: [...state.cards, ...action.payload] }\r\n    default:\r\n      return state;\r\n  }\r\n};","import { createStore, applyMiddleware } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);","\r\nimport { GET_CARDS } from \"../types/types\"\r\nimport { GetService } from '../../services/index'\r\n\r\nconst getService = new GetService()\r\n\r\nconst setCards = (cards) => {\r\n  return {\r\n    type: GET_CARDS,\r\n    payload: cards\r\n  }\r\n}\r\n\r\nexport const getCards = () => {\r\n  return (dispatch) => {\r\n    getService.getResource('apartments-test/entities.json')\r\n      .then(data => dispatch(setCards(data.apartments)))\r\n  }\r\n}","export class GetService {\r\n  _apiBase = 'http://localhost:3000/';\r\n\r\n  async getResource(url) {\r\n    const res = await fetch(`${this._apiBase}${url}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}` +\r\n        `, received ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  }\r\n}","import React, { useState } from 'react'\r\n\r\nexport const Card = ({ card }) => {\r\n  const { title, description, image_url } = card\r\n  const [liked, setLiked] = useState(false)\r\n\r\n  const cls = liked ? ['card__like-icon card__like-icon_liked'] : ['card__like-icon']\r\n\r\n  const handleLikeClick = () => {\r\n    setLiked(prev => !prev)\r\n  }\r\n\r\n  return (\r\n    <div className=\"cards-list__card card\">\r\n      <img src={image_url} alt={title} className=\"card__image\" />\r\n      <div className=\"card__content\">\r\n        <h3 className=\"card__title\">{title}</h3>\r\n        <p className=\"card__description\">{description}</p>\r\n      </div>\r\n      <button onClick={handleLikeClick} className={cls.join(' ')}></button>\r\n    </div>\r\n  )\r\n}","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getCards } from './store/actions/index'\n// import { GetService } from './services'\nimport './App.css';\nimport { Card } from './components/Card';\n\nfunction App() {\n  const cards = useSelector(store => store.cards)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getCards())\n  }, [dispatch])\n\n  return (\n    <div className=\"App\">\n      <section className=\"main\">\n        <div className=\"main__cards-list cards-list\">\n          {cards.map(card => {\n            return <Card key={card.id} card={card} />\n          })}\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/reducer/index\";\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}